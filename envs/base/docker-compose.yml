version: "3.3"
services:
  proxy:
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-traefik
    image: traefik:v2.2
    ports:
      - "80:80"
      - "8090:8080"
    networks:
      - traefik-public
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker=true
      - --tracing=true
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Enable Docker Swarm mode
      # - --providers.docker.swarmmode
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      #- --api.insecure=true

  frontend:
    image: "interlinkproject/frontend:latest"
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-frontend
    env_file:
      - .env
    environment:
      - REACT_APP_BASE_URI=http://localhost
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-frontend-http.rule=PathPrefix(`/`)
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=${PORT}
    networks:
      - traefik-public

  redis:
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-redis
    image: redis:6-alpine
    networks:
      - default

  db:
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-db
    image: interlinkproject/postgres:latest
    #volumes:
    #  - app-db-data:/var/lib/postgresql/data/pgdata
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - default

  coproduction:
    image: interlinkproject/backend-coproduction:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-coproduction
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/coproduction
      - POSTGRES_DB=coproduction
    depends_on:
      db:
        condition: service_healthy
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-coproduction-http.rule=PathPrefix(`/coproduction`)
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-coproduction.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-coproduction-http.middlewares=coproduction-stripprefix
      - traefik.http.middlewares.coproduction-stripprefix.stripprefix.prefixes=/coproduction
    networks:
      - traefik-public
      - default

  coproductionworker:
    image: interlinkproject/backend-coproduction:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-coproductionworker
    command: ["bash", "./worker-start.sh"]
    depends_on:
      - db
      - redis
    env_file:
      - .env
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}
      - PORT=${PORT}
      - BASE_PATH=/coproduction
      - POSTGRES_DB=coproduction
    networks:
      - default

  catalogue:
    image: interlinkproject/backend-catalogue:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-catalogue
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}/catalogue
      - PORT=${PORT}
      - BASE_PATH=/catalogue
      - POSTGRES_DB=catalogue
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-catalogue-http.rule=PathPrefix(`/catalogue`)
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-catalogue.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-catalogue-http.middlewares=catalogue-stripprefix
      - traefik.http.middlewares.catalogue-stripprefix.stripprefix.prefixes=/catalogue
    networks:
      - traefik-public
      - default

  mongodb:
    image: bitnami/mongodb:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-mongodb
    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand({serverStatus:1}).ok' | mongo admin -u
        $MONGODB_ROOT_USER -p $MONGODB_ROOT_PASSWORD --quiet | grep 1
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 20s
    networks:
      - default
  
  auth:
    image: interlinkproject/backend-auth:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-auth
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}/auth
      - PORT=${PORT}
      - BASE_PATH=/auth
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=users
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-auth-http.rule=PathPrefix(`/auth`)
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-auth.loadbalancer.server.port=${PORT}
    networks:
      - traefik-public
      - default

  acl:
    image: interlinkproject/backend-acl:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-acl
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}/acl
      - PORT=${PORT}
      - BASE_PATH=/acl
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=acl_resources
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-acl-http.rule=PathPrefix(`/acl`)
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-acl.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-acl-http.middlewares=acl-stripprefix
      - traefik.http.middlewares.acl-stripprefix.stripprefix.prefixes=/acl
    networks:
      - traefik-public
      - default

  googledrive:
    image: interlinkproject/interlinker-googledrive:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-googledrive
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}/googledrive
      - PORT=${PORT}
      - BASE_PATH=/googledrive
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=googledrive_assets
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-googledrive-http.rule=PathPrefix(`/googledrive`)
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-googledrive.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-googledrive-http.middlewares=googledrive-stripprefix
      - traefik.http.middlewares.googledrive-stripprefix.stripprefix.prefixes=/googledrive
    networks:
      - traefik-public
      - default

  survey:
    image: interlinkproject/interlinker-survey:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-survey
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}/survey
      - PORT=${PORT}
      - BASE_PATH=/survey
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=survey_assets
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-survey-http.rule=PathPrefix(`/survey`)
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-survey.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-survey-http.middlewares=survey-stripprefix
      - traefik.http.middlewares.survey-stripprefix.stripprefix.prefixes=/survey
    networks:
      - traefik-public
      - default

  etherwrapper:
    image: interlinkproject/interlinker-etherpad:etherwrapper-latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-etherwrapper
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}/etherwrapper
      - PORT=${PORT}
      - BASE_PATH=/etherwrapper
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=etherpad_assets
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-etherwrapper-http.rule=PathPrefix(`/etherwrapper`)
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-etherwrapper.loadbalancer.server.port=${PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-etherwrapper-http.middlewares=etherwrapper-stripprefix
      - traefik.http.middlewares.etherwrapper-stripprefix.stripprefix.prefixes=/etherwrapper
    networks:
      - traefik-public
      - default

  etherpad:
    image: interlinkproject/interlinker-etherpad:etherpad-latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-etherpad
    environment:
      - TITLE=${ETHERPAD_TITLE}
      - PORT=${ETHERPAD_PORT}
      - DEFAULT_PAD_TEXT=${ETHERPAD_DEFAULT_PAD_TEXT}
      - ADMIN_PASSWORD=${ETHERPAD_ADMIN_PASSWORD}
      - ADMIN_USER=${ETHERPAD_ADMIN_USER}
      - REQUIRE_SESSION=${ETHERPAD_REQUIRE_SESSION}
      - EDIT_ONLY=${ETHERPAD_EDIT_ONLY}
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}/etherpad
      - BASE_PATH=/etherpad
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=etherpad_assets
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-etherpad-http.rule=PathPrefix(`/etherpad`)
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-etherpad.loadbalancer.server.port=${ETHERPAD_PORT}
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-etherpad-http.middlewares=etherpad-stripprefix
      - traefik.http.middlewares.etherpad-stripprefix.stripprefix.prefixes=/etherpad
    networks:
      - traefik-public
      - default

networks:
  traefik-public:
    external: true
