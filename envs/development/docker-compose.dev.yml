version: "3.3"
services:

  proxy:
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-traefik
    image: traefik:v2.2
    ports:
      - "80:80"
      - "443:443"
      - "8090:8080"
    networks:
      - traefik-public
      - default
    volumes:
      - "../development/letsencrypt:/letsencrypt"
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker=true
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
      - "--certificatesresolvers.letsencrypt.acme.tlschallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.email=apps@interlink-project.eu"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"

  frontend:
    image: "interlinkproject/frontend:latest"
    environment:
      - REACT_APP_BASE_URI=https://dev.interlink-project.eu
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=${PORT}
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-frontend.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-frontend.tls=true"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-frontend.rule=Host(`${DOMAIN}`) && PathPrefix(`/`)"

  coproduction:
    image: interlinkproject/backend-coproduction:latest
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-coproduction.loadbalancer.server.port=${PORT}
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-coproduction.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-coproduction.tls=true"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-coproduction.rule=Host(`${DOMAIN}`) && PathPrefix(`/coproduction`)"
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-coproduction.middlewares=coproduction-stripprefix
      - traefik.http.middlewares.coproduction-stripprefix.stripprefix.prefixes=/coproduction

  catalogue:
    image: interlinkproject/backend-catalogue:latest
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-catalogue.loadbalancer.server.port=${PORT}
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-catalogue.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-catalogue.tls=true"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-catalogue.rule=Host(`${DOMAIN}`) && PathPrefix(`/catalogue`)"
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-catalogue.middlewares=catalogue-stripprefix
      - traefik.http.middlewares.catalogue-stripprefix.stripprefix.prefixes=/catalogue

  auth:
    image: interlinkproject/backend-auth:latest
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}/auth
      - PORT=${PORT}
      - BASE_PATH=/auth
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=users
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-auth.loadbalancer.server.port=${PORT}
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-auth.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-auth.tls=true"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-auth.rule=Host(`${DOMAIN}`) && PathPrefix(`/auth`)"

  acl:
    image: interlinkproject/backend-acl:latest
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=https://${DOMAIN?Variable not set}/acl
      - PORT=${PORT}
      - BASE_PATH=/acl
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=acl_resources
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-acl.loadbalancer.server.port=${PORT}
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-acl.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-acl.tls=true"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-acl.rule=Host(`${DOMAIN}`) && PathPrefix(`/acl`)"
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-acl.middlewares=acl-stripprefix
      - traefik.http.middlewares.acl-stripprefix.stripprefix.prefixes=/acl

  googledrive:
    image: interlinkproject/interlinker-googledrive:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-googledrive
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}/googledrive
      - PORT=${PORT}
      - BASE_PATH=/googledrive
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=googledrive_assets
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-googledrive.loadbalancer.server.port=${PORT}
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-googledrive.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-googledrive.tls=true"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-googledrive.rule=Host(`${DOMAIN}`) && PathPrefix(`/googledrive`)"
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-googledrive.middlewares=googledrive-stripprefix
      - traefik.http.middlewares.googledrive-stripprefix.stripprefix.prefixes=/googledrive

  survey:
    image: interlinkproject/interlinker-survey:latest
    container_name: ${PLATFORM_STACK_NAME?Variable not set}-survey
    environment:
      - SERVER_NAME=${DOMAIN?Variable not set}
      - SERVER_HOST=http://${DOMAIN?Variable not set}/survey
      - PORT=${PORT}
      - BASE_PATH=/survey
      - MONGODB_URL=mongodb://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@mongodb:27017/${MONGODB_DATABASE}?retryWrites=true&w=majority
      - COLLECTION_NAME=survey_assets
    env_file:
      - .env
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.services.${PLATFORM_STACK_NAME?Variable not set}-survey.loadbalancer.server.port=${PORT}
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-survey.tls.certresolver=letsencrypt"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-survey.tls=true"
      - "traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-survey.rule=Host(`${DOMAIN}`) && PathPrefix(`/survey`)"
      - traefik.http.routers.${PLATFORM_STACK_NAME?Variable not set}-survey.middlewares=survey-stripprefix
      - traefik.http.middlewares.survey-stripprefix.stripprefix.prefixes=/survey
